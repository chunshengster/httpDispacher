package utils

import (
	"net"
	"testing"
)

var IPINT32 = []uint32{
	20021249,
	28639233,
	28762113,
	28830721,
	29753345,
	236453889,
	236847105,
	243728385,
	454688769,
	455999489,
	604045313,
	604088321,
	605093889,
	606666753,
	606765057,
	606830593,
	606928897,
	607053825,
	607780865,
	607977473,
	710475777,
	710672385,
	711229441,
	716750849,
	716800001,
	720551937,
	720936961,
	827981825,
	828047361,
	828080129,
	829789185,
	829915137,
	974548993,
	977453057,
	977510401,
	978535425,
	978537217,
	978537985,
	978539521,
	979599361,
	992320513,
	993124353,
	993132545,
	996881409,
	996888577,
	997064705,
	1007501313,
	1020119041,
	1020121089,
	1021304833,
	1024366593,
	1033803521,
	1039147777,
	1039175937,
	1039177729,
	1699183105,
	1778606849,
	1778958337,
	1780678657,
	1780809729,
	1781284865,
	1782136833,
	1782185985,
	1782317057,
	1785659393,
	1785987073,
	1786380289,
	1786707969,
	1786757121,
	1793163265,
	1848183553,
	1851457537,
	1855766529,
	1856460801,
	1858011137,
	1862340865,
	1862787073,
	1862791169,
	1862797569,
	1862916097,
	1870536705,
	1870542081,
	1877057537,
	1877069825,
	1877274625,
	1879310337,
	1883373569,
	1885339649,
	1896153089,
	1896988161,
	1897611265,
	1897869057,
	1899560961,
	1899626497,
	1902897409,
	1903165441,
	1903230977,
	1903296513,
	1904017409,
	1904082945,
	1904312321,
	1904590849,
	1905098753,
	1910939649,
	1919948801,
	1919949825,
	1921486849,
	1940402945,
	1940410369,
	1944518657,
	1948188673,
	1949696001,
	1949820929,
	1959165953,
	1960345601,
	1960353793,
	1960374273,
	1960377345,
	1966931969,
	1971587329,
	1971847681,
	1971847937,
	1971848193,
	1971848449,
	1971848705,
	1971848961,
	1971849473,
	1971849729,
	1971849985,
	1971850241,
	1971850497,
	1971850753,
	1971851009,
	1971851265,
	1971851521,
	1971851777,
	1971852033,
	1971852289,
	1971852545,
	1971852801,
	1971853057,
	1971853313,
	1971853569,
	1971853825,
	1971854081,
	1971854337,
	1971854593,
	1971854849,
	1971855105,
	1971856129,
	1971856385,
	1971856641,
	1971857153,
	1971858433,
	1971858689,
	1971859457,
	1981347841,
	1992525825,
	1992544257,
	1992546305,
	1992547329,
	1997864961,
	1997874433,
	1997881345,
	1997930497,
	1997930753,
	1997931009,
	1997931521,
	1997935617,
	1998878721,
	1999175681,
	2000478209,
	2003173377,
	2005860353,
	2006180097,
	2015952897,
	2016165889,
	2016181249,
	2017525761,
	2017530113,
	2017559041,
	2017574913,
	2017585153,
	2017589761,
	2017591041,
	2018770945,
	2018821121,
	2018967553,
	2019356673,
	2019357185,
	2019357441,
	2019359745,
	2022048001,
	2022175489,
	2025901057,
	2027085825,
	2031001601,
	2032138241,
	2032422913,
	2032427009,
	2032443393,
	2032447489,
	2032448513,
	2032450305,
	2032451585,
	2032719873,
	2032720897,
	2032721921,
	2032790529,
	2032867329,
	2033426433,
	2033428481,
	2033844225,
	2043280385,
	2047680513,
	2047706113,
	2047787777,
	2047807489,
	2049991681,
	2050211841,
	2052222977,
	2059534337,
	2061566721,
	2061828097,
	2067283969,
	2067436545,
	2067661825,
	2067665921,
	2067667713,
	2069827585,
	2070241281,
	2075596801,
	2076442625,
	2076463105,
	2076465921,
	2079817729,
	2080197633,
	2081701889,
	2083454977,
	2084700161,
	2090598401,
	2090908673,
	2091687937,
	2091705345,
	2095136769,
	2095148033,
	2095150081,
	2095157249,
	2095158273,
	2095163393,
	2095169537,
	2095177217,
	2096091137,
	2096631809,
	2102937857,
	2344419329,
	2364538881,
	2364735489,
	2533294081,
	2566914049,
	2574712833,
	2869493761,
	2869755905,
	2874212353,
	2875807745,
	2875875329,
	2875973633,
	2876002305,
	2876028929,
	2876035073,
	2876071937,
	2876137473,
	2876170241,
	2876203009,
	2876375041,
	2876440577,
	2882592001,
	2883190785,
	3026321409,
	3026386945,
	3028993025,
	3028996097,
	3029007361,
	3029270529,
	3056467969,
	3059810305,
	3060137985,
	3060269057,
	3061191681,
	3062890497,
	3069239297,
	3069427713,
	3069444097,
	3069698049,
	3072851969,
	3072983041,
	3073048577,
	3074234369,
	3079208961,
	3084713473,
	3086876673,
	3411054593,
	3417303041,
	3523543041,
	3523549953,
	3524118785,
	3524195361,
	3524195841,
	3524195937,
	3524709899,
	3545858305,
	3545944065,
	3545944577,
	3545996289,
	3546005761,
	3546006273,
	3546130178,
	3546263553,
	3546442417,
	3546458873,
	3548956673,
	3548962305,
	3548981505,
	3548983041,
	3549001473,
	3549021185,
	3549067521,
	3549074177,
	3549075457,
	3549080833,
	3549083393,
	3549138945,
	3549140225,
	3549143553,
	3549171713,
	3549347073,
	3549377537,
	3549402369,
	3549407745,
	3549606657,
	3659177473,
	3662515969,
	3662519297,
	3662527489,
	3662531073,
	3662533377,
	3662536193,
	3662540801,
	3662543617,
	3670603521,
	3670636033,
	3670688001,
	3670772737,
	3670884609,
	3670998017,
	3678955521,
	3678965761,
	3683958529,
	3701983233,
	3703586817,
	3703588865,
	3703590913,
	3703603201,
	3703605249,
	3703609345,
	3703615489,
	3703621633,
	3703623169,
	3703666689,
	3703735297,
	3703779329,
	3703894017,
	3703933953,
	3704131329,
	3704132353,
	3704133121,
	3704150017,
	3704183809,
	3704186881,
	3704244225,
	3704245761,
	3704255745,
	3704430593,
	3704438785,
	3704441345,
	3704443393,
	3704444161,
	3704445185,
	3704445441,
	3704449025,
	3704450561,
	3704451585,
	3704452097,
	3704453121,
	3704454145,
	3704463361,
	3704466433,
	3704467457,
	3704469505,
	3704475649,
	3704479745,
	3704554497,
	3704559617,
	3704567809,
	3704572929,
	3704578049,
	3704582145,
	3704586241,
	3704587265,
	3704588289,
	3704589313,
	3704594433,
	3704596481,
	3704599553,
	3704600065,
	3704600577,
	3704601601,
	3704602625,
	3704606721,
	3704607745,
	3704609793,
	3704614913,
	3704615425,
	3704615937,
	3704617985,
	3704618497,
	3715784198,
	3715866625,
	3715867393,
	3715872769,
	3716292609,
	3716313089,
	3719302401,
	3719315713,
	3719319553,
	3719495681,
	3719496449,
	3719692289,
	3719706113,
	3719706625,
	3719725057,
	3720486401,
	3720863745,
	3723395073,
	3723420673,
	3728539649,
	3748136961,
	3748137217,
	3754295297,
	3755175937,
	3755859969,
}
var ipnet_array = []string{
	"10.0.0.2/8",
	"10.0.0.0/14",
	"10.20.0.0/14",
	"210.168.0.0/17",
	"210.168.96.0/19",
	"210.168.192.0/18",
	"210.169.0.0/17",
	"210.168.128.0/18",
	"210.169.128.0/17",
	"210.169.212.0/24",
	"210.16.14.0/24",
	"210.16.0.0/24",
	"210.16.1.0/24",
	"210.16.40.0/24",
	"210.166.0.0/19",
	"210.166.5.0/24",
	"210.167.0.0/19",
	"210.166.0.0/20",
	"210.166.96.0/19",
	"210.167.112.0/20",
	"210.167.128.0/18",
	"210.167.192.0/18",
	"210.167.32.0/19",
	"210.166.209.0/24",
	"210.166.211.0/24",
}

func TestInt32ToIP4(t *testing.T) {

	for _, i := range IPINT32 {
		t.Log(Int32ToIP4(uint32(i + 1)))
	}

}

func TestIpNetToInt32(t *testing.T) {
	for _, i := range ipnet_array {
		ip, ipnet, e := net.ParseCIDR(i)
		if e == nil {
			t.Log(ip)
			t.Log(IpNetToInt32(ipnet))
		}
	}
}

func TestNetworkRange(t *testing.T) {
	for _, i := range ipnet_array {
		_, ipnet, _ := net.ParseCIDR(i)
		f, l := NetworkRange(ipnet)
		t.Log(f, l)
		t.Log(Ip4ToInt32(f), Ip4ToInt32(l))
	}
}

func TestFileLine(t *testing.T) {
	t.Log(GetDebugLine(), ".......")
}

func TestInt32ToIpNet(t *testing.T) {
	for _, i := range ipnet_array {
		ip, ipnet, e := net.ParseCIDR(i)
		if e == nil {
			t.Log(ip)
			ipaddr, mask := IpNetToInt32(ipnet)
			ipnet, e = Int32ToIpNet(ipaddr, mask)
			if e == nil {
				t.Log(ipnet)
			}
		}
	}
}

func TestGetCIDRMaskWithUint32Range(t *testing.T) {
	n_a := []uint32{1, 3, 7, 15, 31, 63, 127, 255, 262143}
	for _, n := range n_a {
		t.Logf("%d,%b", n, n)
		x := GetCIDRMaskWithUint32Range(0, n)
		t.Log(x)
	}
}
